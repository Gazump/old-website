{"version":3,"sources":["index.js"],"names":["Square","props","className","winning","onClick","value","Board","i","this","squares","winHighlight","combo","table","push","square_row","j","renderSquare","React","Component","Game","state","history","Array","fill","moves_pos","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","indexToCoord","handleClick","lines","a","b","c","row","Math","floor","toString","sqr","console","log","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c255dba.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={props.winning ? 'winning' : 'square'} onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  \r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.props.squares[i]}\r\n        winning={winHighlight(i, this.props.combo)}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n\r\n    let table = [];\r\n    table.push();\r\n\r\n    for (var i = 0; i < 3; i++) {\r\n      let square_row = [];      \r\n      for (var j = 0; j < 3; j++) { \r\n        square_row.push(this.renderSquare(i*3+j));\r\n      }\r\n      table.push(\r\n      <div className=\"board-row\">\r\n        <div className=\"label\">{i}</div>\r\n        {square_row}               \r\n      </div>);      \r\n  }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          <div className=\"label\"> </div>\r\n          <div className=\"label\">0</div>\r\n          <div className=\"label\">1</div>\r\n          <div className=\"label\">2</div>\r\n        </div>        \r\n        {table}        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      moves_pos: [-1],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const moves_pos = this.state.moves_pos.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length-1];\r\n    const squares = current.squares.slice();    \r\n    if (calculateWinner(squares)[0] || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n      }]),\r\n      moves_pos: moves_pos.concat(i),\r\n      stepNumber: history.length,     \r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const moves_pos = this.state.moves_pos;    \r\n    const [winner, combo] = calculateWinner(current.squares);    \r\n\r\n    const moves = history.map((step,move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>            \r\n              {move === this.state.stepNumber ? <b>{desc}</b> : desc}\r\n            </button>\r\n            {move ? indexToCoord(moves_pos[move]) : ''}\r\n          </li>\r\n        )\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;    \r\n    } else if (this.state.stepNumber === 9) {\r\n      status = 'Draw';\r\n    } \r\n    else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares ={current.squares}\r\n            combo = {combo}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">          \r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// HELPER FUNCTIONS =======================\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return [squares[a],lines[i]];\r\n    }\r\n  }\r\n  return [null,null];\r\n}\r\n\r\nfunction indexToCoord(i) {\r\n  const row = Math.floor(i / 3);\r\n  const col = i % 3;\r\n  return '('+col.toString()+','+row.toString()+')';\r\n}\r\n\r\nfunction winHighlight(sqr, combo) {\r\n  console.log('checking win...');\r\n  if (combo != null )\r\n    console.log('We have a win!'+combo.toString());\r\n    console.log(sqr);\r\n  if (combo != null && combo.includes(sqr)) {\r\n    console.log('should highlight now');\r\n  }\r\n  return combo != null && combo.includes(sqr);\r\n}"],"sourceRoot":""}